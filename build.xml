<?xml version="1.0"?>
<project name="DFO Planner" default="jar" basedir=".">

	<property name="src.dir" value="src"/>
	<property name="build.dir" value="build" />
	<property name="doc.dir" value="docs" />
	<property name="libs.dest.dir" value="build/libs" />
	<property name="libs.src.dir" value="libs" />
	<property name="debug.level" value="lines,vars,source" />
	<property name="jars.dir"  value="jars" />
	<property name="buildnum.file" value="build.num" />
	<property name="jdom.dir" value="jdom" />
	<property name="project.name" value="WISP" />
	<property name="main.class" value="skillsplanner.Launcher" />
	<property name="version.num" value="1.10b" />

	<!-- include all jar files in the libs directory -->
  
	<path id="external.jars">
	    <fileset dir="${libs.src.dir}" includes="**"/>
	</path>

	<path id="project.classpath">
        <pathelement location="${src.dir}"/>
        <path refid="external.jars" />
	</path>
    
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${doc.dir}" />
	</target>

	<target name="init" depends="clean">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${doc.dir}" />
	</target>

	<target name="library" depends="init">
		<delete dir="${libs.dest.dir}" />
		<copy todir="${libs.dest.dir}">
			<fileset dir="${libs.src.dir}" />
		</copy>
	</target>

	<target name="javadoc" depends="library">
		<javadoc sourcepath="${src.dir}" 
		destdir="${doc.dir}"
		classpathref="project.classpath"
		version="true"
		use="true"
		useexternalfile="true"
		maxmemory="512M"/>
	</target>
	<!-- Compile the code -->
	<target name="compile" depends="javadoc">
		<javac srcdir="${src.dir}" 
			destdir="${build.dir}" 
			debug="true" 
			classpathref="project.classpath"
			debuglevel= "${debug.level}"
			includeantruntime="false">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<target name="jar" depends="compile">
		<buildnumber file="${buildnum.file}" />

		<!-- delete old manifest file and create new one -->
		<delete file="MANIFEST.MF" />

	    <manifest file="MANIFEST.MF">
	        <attribute name="Built-By" value="${user.name}"/>
	        <attribute name="Main-Class" value="${main.class}"/>
	        <attribute name="Implementation-Version" 
	                     value="${version.num}-b${build.number}"/> 
	    </manifest>

		<property name="jar.name" value="${project.name}.${version.num}-b${build.number}.jar" />

		<delete file="${jars.dir}/${jar.name}" />

		<!-- create runnable jar file -->
		<jar 
			destfile="${jars.dir}/${jar.name}"
			basedir="${build.dir}"
			manifest="MANIFEST.MF"
			duplicate="preserve"
			>
			<!-- include all class files -->
			<fileset dir="${build.dir}" includes="**/*.class" />
			
			<!--  influde jdom files -->
			<fileset dir="${jdom.dir}" includes="**/*.class" />

			<!-- Include all library files -->
			<zipfileset dir="${libs.src.dir}" includes="*" prefix="${libs.src.dir}" />
		</jar>
	</target>
	
	<target name="justjar" depends="library">
		
		<!-- Compile -->
		<javac srcdir="${src.dir}" 
					destdir="${build.dir}" 
					debug="true" 
					classpathref="project.classpath"
					debuglevel= "${debug.level}"
					includeantruntime="false">
					<compilerarg value="-Xlint:unchecked" />
		</javac>
		
	
		<!-- Make the jar file -->

		<!-- delete old manifest file and create new one -->
		<delete file="MANIFEST.MF" />

	    <manifest file="MANIFEST.MF">
	        <attribute name="Built-By" value="${user.name}"/>
	        <attribute name="Main-Class" value="${main.class}"/>
	        <attribute name="Implementation-Version" 
	                     value="${version.num}"/> 
	    </manifest>

		<property name="jar.name" value="${project.name}.${version.num}.jar" />

		<delete file="${jar.name}" />

		<!-- create runnable jar file -->
		<jar 
			destfile="${jars.dir}/${jar.name}"
			basedir="${build.dir}"
			manifest="MANIFEST.MF"
			duplicate="preserve"
			>
			<!-- include all class files -->
			<fileset dir="${build.dir}" includes="**/*.class" />
			
			<!--  influde jdom files -->
			<fileset dir="${jdom.dir}" includes="**/*.class" />

			<!-- Include all library files -->
			<zipfileset dir="${libs.src.dir}" includes="*" prefix="${libs.src.dir}" />
		</jar>
		
		
		<!-- Do a full clean up of the build-->
		<delete dir="${build.dir}" />
	</target>
	
	<target name="liblessjar" depends="init">
		<javac srcdir="${src.dir}" 
			destdir="${build.dir}" 
			debug="true" 
			classpathref="project.classpath"
			debuglevel= "${debug.level}"
			includeantruntime="false">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
		
		<!-- Make the jar file -->

		<!-- delete old manifest file and create new one -->
		<delete file="MANIFEST.MF" />

	    <manifest file="MANIFEST.MF">
	        <attribute name="Built-By" value="${user.name}"/>
	        <attribute name="Main-Class" value="${main.class}"/>
	        <attribute name="Implementation-Version" 
	                     value="${version.num}"/> 
	    </manifest>

		<property name="jar.name" value="${project.name}.${version.num}-simple.jar" />

		<delete file="${jar.name}" />

		<!-- create runnable jar file -->
		<jar 
			destfile="${jars.dir}/${jar.name}"
			basedir="${build.dir}"
			manifest="MANIFEST.MF"
			duplicate="preserve"
			>
			<!-- include all class files -->
			<fileset dir="${build.dir}" includes="**/*.class" />
			
			<!--  influde jdom files -->
			<fileset dir="${jdom.dir}" includes="**/*.class" />
		</jar>
	</target>
</project>
